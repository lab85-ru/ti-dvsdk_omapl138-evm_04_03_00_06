/* 
 * Copyright (c) 2010, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */

/*
 *  ======== package.bld ========
 */

var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

/* If you don't want to redistribute your sources, set this to false. */
Pkg.attrs.exportSrc = true;

/* lib/ is a generated directory that 'xdc clean' should remove */
Pkg.generatedFiles.$add("lib/");

var publicEncHeader = "g711enc_sun.h";
var publicDecHeader = "g711dec_sun.h";

/* Always include the public headers in the generated release archive */
Pkg.otherFiles.$add(publicEncHeader);
Pkg.otherFiles.$add(publicDecHeader);


/*
 *  Optionally, you may also want to redistribute these source files,
 *  depending on your customer and delivery scenarios.
 */
Pkg.otherFiles.$add("pjt/g711.pjt");            /* CCS project file */
Pkg.otherFiles.$add("package.bld");             /* XDC build script */
Pkg.otherFiles.$add("g711_sun_internal.h");     /* Internal interface header */
Pkg.otherFiles.$add("g711enc_sun_priv.h");      /* Internal interface header */
Pkg.otherFiles.$add("g711dec_sun_priv.h");      /* Internal interface header */

/*
 * Create an array containing the files to include in this
 * package.  Note that the extension is added by XDC, so it need
 * not be explicitly specified.
 */
var SRCS = ["g711enc_sun_ialg.c", "g711dec_sun_ialg.c",
        "g711_sun_internal.c"];

for (var i = 0; i < Build.targets.length; i++) {
    var targ = Build.targets[i];

//    print("building for target " + targ.name + " ...");

    /* Build for all profiles */
    for (var profile in targ.profiles) {

        var libName = "lib/" + profile + "/g711";
        var fullLibName = libName + '.a' + targ.suffix;

        Pkg.addLibrary(libName, targ, {
            profile: profile
        }).addObjects(SRCS);

        /*
                 * And use the QualiTI-provided template to generate 2 .qti scripts,
                 * one for the encoder, the other for the decoder.
                 */
        var qtiAttrs = [
                "SUN",              // vendor
                publicDecHeader,    // headers (relative to base dir)
                "IG711DEC",         // interface name
                "G711DEC",          // module name,
                fullLibName,        // lib name (relative to base dir)
                "../.."             // base dir (relative to .qti script)
        ];

        xdc.loadTemplate("ti/xdais/qualiti/QtiProject.xdt").genFile(
                fullLibName + '_dec.qti', Pkg, qtiAttrs);

        /* Include the newly generated .qti script to the release */
        Pkg.otherFiles.$add(fullLibName + '_dec.qti');

        var qtiAttrs = [
                "SUN",              // vendor
                publicEncHeader,    // headers (relative to base dir)
                "IG711ENC",         // interface name
                "G711ENC",          // module name,
                fullLibName,        // lib name (relative to base dir)
                "../.."             // base dir (relative to .qti script)
        ];

        xdc.loadTemplate("ti/xdais/qualiti/QtiProject.xdt").genFile(
                fullLibName + '_enc.qti', Pkg, qtiAttrs);

        /* Include the newly generated .qti script to the release */
        Pkg.otherFiles.$add(fullLibName + '_dec.qti');
    }
}
/*
 *  @(#) ti.xdais.dm.examples.g711; 1, 0, 0,223; 9-18-2010 14:46:07; /db/wtree/library/trees/dais/dais-t03x/src/ xlibrary

 */

