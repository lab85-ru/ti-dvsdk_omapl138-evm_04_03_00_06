; --COPYRIGHT--,BSD
; Copyright (c) $(CPYYEAR), Texas Instruments Incorporated
; All rights reserved.
;
; Use of this software is controlled by the terms and conditions found in
; the New BSD Software License Agreement, which is reproduced in its
; entirity below.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions
; are met:
;
; *  Redistributions of source code must retain the above copyright
;    notice, this list of conditions and the following disclaimer.
;
; *  Redistributions in binary form must reproduce the above copyright
;    notice, this list of conditions and the following disclaimer in the
;   documentation and/or other materials provided with the distribution.
;
; *  Neither the name of Texas Instruments Incorporated nor the names of
;    its contributors may be used to endorse or promote products derived
;    from this software without specific prior written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
; THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
; PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
; CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
; WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
; OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
; EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
; --/COPYRIGHT--

;
;  ======== c64p_getltime.s64P ========
;  C callable interface to get time counter
;

;
; ======== _C64P_getltime ========
;
;  long long C64P_getltime(Void);
;
        .global _C64P_getltime
_C64P_getltime:
        .asmfunc
        b b3            ; start branch to b3, disable ints
        mvc TSCL, b4    ; get TSCL
        mvc TSCH, b5    ; get TSCH
        mv b4, a4       ; a4 = low 32-bits of return value
        mv b5, a5       ; a5:a4 = return value
        nop             ; additional delay cycles
        .endasmfunc

;
; ======== _C64P_getltime8 ========
;
;  long long C64P_getltime8(Void);
;
        .global _C64P_getltime8
_C64P_getltime8:
        .asmfunc
        b b3            ; start branch to b3, disable ints
        mvc TSCL, b4    	; b4 = TSCL
        mvc TSCH, b5    	; b5 = TSCH
        shl  b5, 0x18, a3
        shru b4, 0x8, a4
        or   a4, a3, a4		; a4 = b5 << 24 | b4 >> 8
||      shru b5, 0x8, a5	; a5 = b5 >> 8
        .endasmfunc
