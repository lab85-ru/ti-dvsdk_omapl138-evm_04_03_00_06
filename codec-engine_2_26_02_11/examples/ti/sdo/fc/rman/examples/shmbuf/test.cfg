/* 
 * Copyright (c) 2010, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * */

/*
 *  ======== test.cfg ========
 */

///////////////////////////////////////////////////////////////////////////////
/* Load common XDC config settings */
//utils.importFile("../common.cfg");
var chipType = Program.build.cfgArgs.chipType;

/* Set up gt trace defaults */

var GTINFRA = xdc.useModule("ti.sdo.fc.utils.gtinfra.GTINFRA");
GTINFRA.runtimeEnv = GTINFRA.NONE;

var GT = xdc.useModule("ti.sdo.utils.trace.GT");
GT.MALLOCFXN = "myMalloc";
GT.PRINTFXN = "printfCaller";

///////////////////////////////////////////////////////////////////////////////

/*
 * Configure the RMAN to be used 
 */ 
var RMAN = xdc.useModule('ti.sdo.fc.rman.RMAN');
RMAN.semCreateFxn = "SemMP_create";
RMAN.semDeleteFxn = "SemMP_delete";
RMAN.semPendFxn = "SemMP_pend";
RMAN.semPostFxn = "SemMP_post";

/* 
 * Could set this to true, and let RMAN use DSKT's persistent alloc/free 
 * functions, below. (DSKT2 is currently available on C64x+ + BIOS only)  
 */ 
RMAN.persistentAllocFxn = "__ALG_allocMemory" ;
RMAN.persistentFreeFxn = "__ALG_freeMemory" ;
RMAN.useDSKT2 = false;
RMAN.yieldSamePriority = true;
RMAN.tableSize = 10;

/* Configure the ires protocols that will be registered with RMAN 
and/or requested by algorithms */
var ires = xdc.useModule('ti.sdo.fc.ires.shmbuf.SHMBUF');
ires.bufsize = 0x200;

var shm = xdc.useModule('ti.sdo.fc.utils.SHM');

/* Implements the ALG_create/delete activate/deactivate interfaces.
   If using another framework (such as Codec Engine), ALG interfaces
   will be provided by it */
xdc.loadPackage("ti.sdo.fc.utils.api");
/*
 *  @(#) ti.sdo.fc.rman.examples.shmbuf; 1, 0, 0,119; 12-1-2010 17:25:54; /db/atree/library/trees/fc/fc-p01x/src/ xlibrary

 */

