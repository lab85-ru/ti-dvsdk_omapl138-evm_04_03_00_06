/* 
 * Copyright (c) 2010, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
/*
 *  ======== package.bld ========
 */

var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

Pkg.attrs.exportAll = true;
Pkg.attrs.profile = "debug";

var buildPlatforms = {
    //C64P:             ["2430", "dm6446","dm648"],
    C64P:               ["dm6446","C6455", "3430", "3530"],
};

/*
 * Executables for all platforms
 * To add a new program, just create a new element in the progs array and
 * set it equal to an array listing the objects the program requires.
 *
 * The output will have the name "<element>_tiomapxxxx.<ext>" or
 * "<element>_<platform>.<ext>" , and for BIOS based apps there
 * must be a tconf script describing the programs configuration with the
 * name <element>.tcf.
 */
var commonProgs = [
    {
        name:    "nullres",
        sources: ["app"],
        tcf:     "ires_algorithm",
    },
];

/* Specifies which programs run on which platforms */
var platProgs = {
    "2430"     : commonProgs,
    "dm6446"   : commonProgs,
    "dm648"    : commonProgs,
    "C6455"    : commonProgs,
    "3430"     : commonProgs,
    "3530"     : commonProgs,
};

var realPlatformName = {
    "2430"     : "ti.platforms.sdp2430",
    "dm6446"   : "ti.platforms.evmDM6446",
    "dm648"    : "ti.platforms.evmDM648",
    "c6455"    : "ti.platforms.dsk6455",
    "3430"     : "ti.platforms.sdp3430",
    "3530"     : "ti.platforms.evm3530",
};

var testLibs = [
];

/*
 *  Needed for BIOS-based platforms.  For non-BIOS platforms, this is
 *  unnecessary but benign.
 */
Pkg.uses = ["ti/bios/include"];

for (var i = 0; i < Build.targets.length; i++) {
    var targ = Build.targets[i];
    var plat = targ.platform;   /* use the target's default platform */

    if (buildPlatforms[targ.name] == null) {
        print("Not building for target " + targ.name + " ****");
        continue;
    }
    //print("building for target " + targ.name + " ****");

    var profName = "debug";
    var profCOpts = targ.profiles[profName].compileOpts.copts;
    var profDefs = targ.profiles[profName].compileOpts.defs;

    // Build libraries
    for (var j = 0; j < testLibs.length; j++) {
        //print("Adding library " + testLibs[j].name + "****");
        var lib = Pkg.addLibrary(testLibs[j].name,
                targ, {
                                 copts: COPTS +  profCOpts,
                                 aopts: "",
                                 defs: profDefs,
                                 profile: profName
                });
        lib.addObjects(testLibs[j].sources);
    }
}
/*
 *  @(#) ti.sdo.fc.rman.examples.nullresource; 1, 0, 0,171; 12-1-2010 17:25:50; /db/atree/library/trees/fc/fc-p01x/src/ xlibrary

 */

