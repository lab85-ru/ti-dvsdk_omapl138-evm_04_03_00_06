/* 
 * Copyright (c) 2010, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
/*
 *  ======== local.cfg ========
 */

/* use an osal.  osalGlobal is configured below, based on target. */
var osalGlobal = xdc.useModule('ti.sdo.ce.osal.Global');

/* get various codec modules; i.e., implementation of codecs */
var decoder =
    xdc.useModule('ti.sdo.ce.examples.codecs.viddec_copy.VIDDEC_COPY');
var encoder =
    xdc.useModule('ti.sdo.ce.examples.codecs.videnc_copy.VIDENC_COPY');

if (Program.build.target.os == undefined) {
    /* Presume this is a BIOS OS */
    osalGlobal.runtimeEnv = osalGlobal.DSPBIOS;

    /* "DDR2" is a BIOS memory segment defined in the BIOS .tcf script */
    osalGlobal.defaultMemSegId = "DDR2";

    /* Some codecs provide performance optimizations via DMA */
    encoder.useDMA = true;

    /* for detailed information about DSKT2 and DMAN3 settings below, please
     * refer to ti/sdo/ce/examples/servers/all_codecs/*.cfg
     */
    var DSKT2 = xdc.useModule('ti.sdo.fc.dskt2.DSKT2');
    DSKT2.DARAM0     = "L1DHEAP";
    DSKT2.DARAM1     = "L1DHEAP";
    DSKT2.DARAM2     = "L1DHEAP";
    DSKT2.SARAM0     = "L1DHEAP";
    DSKT2.SARAM1     = "L1DHEAP";
    DSKT2.SARAM2     = "L1DHEAP";
    DSKT2.ESDATA     = "DDR2";
    DSKT2.IPROG      = "L1DHEAP";
    DSKT2.EPROG      = "DDR2";
    DSKT2.DSKT2_HEAP = "DDR2";    /* to allocate internal DSKT2 object */

    var DMAN3 = xdc.useModule('ti.sdo.fc.dman3.DMAN3');

    DMAN3.heapInternal    = "L1DHEAP";
    DMAN3.heapExternal    = "DDR2";
    DMAN3.idma3Internal   = false;
    DMAN3.scratchAllocFxn = "DSKT2_allocScratch";
    DMAN3.scratchFreeFxn  = "DSKT2_freeScratch";
}
else if (Program.build.target.os == "Linux") {
    osalGlobal.runtimeEnv = osalGlobal.LINUX;
}
else if (Program.build.target.os == "WindowsCE") {
    osalGlobal.runtimeEnv = osalGlobal.WINCE;
}
else {
    /* Unsupported OS.  Throw an exception to alert the user. */
    throw ("Unsupported target OS");
}

/*
 *  ======== Engine Configuration ========
 */
var Engine = xdc.useModule('ti.sdo.ce.Engine');
var myEngine = Engine.create("video_copy", [
    {
        name : "videnc_copy",
        mod  : encoder,
        local: true
    },
    {
        name : "viddec_copy",
        mod  : decoder,
        local: true
    }
]);
/*
 *  @(#) ti.sdo.ce.examples.apps.video_copy; 1, 0, 0,77; 12-2-2010 21:21:32; /db/atree/library/trees/ce/ce-r11x/src/ xlibrary

 */

