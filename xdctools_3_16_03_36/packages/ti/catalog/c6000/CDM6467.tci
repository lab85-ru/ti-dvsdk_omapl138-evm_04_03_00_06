/*
 *  Copyright (c) 2010 by Texas Instruments and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 *
 *  Contributors:
 *      Texas Instruments - initial implementation
 *
 * */

/*
 *  ======== CDM6467.tci ========
 *  The Davinci chip configuration settings
 *
 */

/*
 *  Load C64P.tci arch file
 */
utils.loadArch("64P", "ti.catalog.c6000");

/*
 *  ======== CDM6467 ========
 */
function CDM6467(name, parent)
{
    /*
     * The 'this' refers to the cpu object created in the platform file.
     * The apply function is a way to execute a function with a specific
     * 'this' pointer. Its used to initialize CDM6467 base on a C64P.
     */
    C64P.apply(this, [name, parent]);

    /*
     * This field is used to include bios settings for this device.
     */
    this.deviceName = "DM6467";

    /* cpu registers */
    this.registers = [];

    /*
     * This associative array defines the on-chip physical memory segments
     * indexed by the segment name.  
     */
    this.memBlock = [];

    this.memBlock["ARM_RAM"] = {
        comment: "Internal 32K ARM RAM Memory",
        name: "ARM_RAM",
        base: 0x10010000,
        len:  0x00008000,
        space: "data"
    };

    this.memBlock["ARM_R0M"] = {
        comment: "Internal 32K ARM ROM Memory",
        name: "ARM_ROM",
        base: 0x10018000,
        len:  0x00008000,
        space: "data"
    };

    this.memBlock["L2ROM"] = {
        comment: "Internal 64K L2 ROM",
        name: "L2ROM",
        base: 0x11800000,
        len:  0x00010000,
        space: "code/data"
    };
    
    this.memBlock["IRAM"] = {
        comment: "Internal 128K L2 RAM/CACHE in UMAP0",
        name: "IRAM",
        base: 0x11818000,
        len:  0x00020000,
        space: "code/data"
    };
    
    this.memBlock["L1PSRAM"] = {
        comment: "Internal 32K RAM/CACHE L1 Program Memory",
        name: "L1PSRAM",
        base: 0x11E00000,
        len:  0x00008000,
        space: "code"
    };

    this.memBlock["L1PCACHE"] = {
        comment: "Internal 32K RAM/CACHE L1 Program Memory",
        name: "L1PCACHE",
        base: 0x11E00000,
        len:  0x00008000,
        space: "code"
    };

    this.memBlock["L1DSRAM"] = {
        comment: "Internal 32K RAM/CACHE L1 Data Memory",
        name: "L1DSRAM",
        base: 0x11F00000,
        len:  0x00008000,
        space: "data"
    };
    
    this.memBlock["L1DCACHE"] = {
        comment: "Internal 32K RAM/CACHE L1 Data Memory",
        name: "L1DCACHE",
        base: 0x11F00000,
        len:  0x00008000,
        space: "data"
    };

    /* Define On-chip Memory Map */
    this.mem = [];

    this.mem[0] = [
        this.memBlock["ARM_RAM"],
        this.memBlock["L1PSRAM"],
        this.memBlock["L1DSRAM"],
        this.memBlock["IRAM"],
    ];

    /*
     * ======== getMemoryMap ========
     * This method returns the on-chip memory map.
     */
    this.getMemoryMap = function ()
    {
        return(this.mem[0]);
    };
}
/*
 *  @(#) ti.catalog.c6000; 1, 0, 0, 0,226; 2-23-2010 16:50:36; /db/ztree/library/trees/platform/platform-k32x/src/
 */

