/*
 *  Copyright (c) 2010 by Texas Instruments and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 *
 *  Contributors:
 *      Texas Instruments - initial implementation
 *
 * */

/*
 *  ======== Platform.tci ========
 *
 */

/*
 * The following comment is used by the Graphical Config Tool:
 * !DESCRIPTION 6XXX!  Sim62xx (200 Mhz) using 6204 device
 * !NAME! ti.platforms.sim62xx
 */


/*
 * Setup platform-specific memory map, CLK rate, etc.
 */

var mem_ext = [];

var device_regs = {};

if (environment["ti.bios.oldMemoryNames"] == undefined ||
    environment["ti.bios.oldMemoryNames"] == 'false' ||
    environment["ti.bios.oldMemoryNames"] == '0') {

    var sbsrambase = 0x40000;
    if (device_regs.mapMode == 0) {
        sbsrambase = 0;
    }
    mem_ext[0] = {
        comment: "64K x 32-bit words of 133 MHz",
        name: "SBSRAM",
        base: sbsrambase,
        len:  0x00040000,
        space: "code/data"
    };
    
    mem_ext[1] = {
        comment: "1M x 32-bit words of 100 Mhz",
        name: "SDRAM0",
        base: 0x02000000,
        len:  0x00400000,
        space: "code/data"
    };
    
    mem_ext[2] = {
        comment: "1M x 32-bit words of 100 Mhz",
        name: "SDRAM1",
        base: 0x03000000,
        len:  0x00400000,
        space: "code/data"
    };
}

var params = {
    clockRate: 200,
    catalogName: "ti.catalog.c6000",
    deviceName: "6204",
    regs: device_regs,
    mem: mem_ext
};

/* override the defaults with anything specified by client */
if (utils.loadPlatform.params != null) {
    var overrides = utils.loadPlatform.params;
    for (var i in params) {
        if (i in overrides) {
            params[i] = overrides[i];
        }
    }
}

/*
 * Customize generic platform with parameters specified above.
 */
utils.loadPlatform("ti.platforms.generic", params);

/* Set RTXD.MODE to simulator and then disable RTDX, so if a user chooses to
 * have it enabled, MODE would be set correctly already.
 */
bios.RTDX.ENABLERTDX = 1;
bios.RTDX.MODE = "Simulator";
bios.RTDX.ENABLERTDX = 0;

print("remark:Sim62xx platform is configured for " + params.deviceName + " device. To change " +
      "the configuration to another 62 device, please add " +
      "that device as a parameter to utils.loadPlatform() call in your TCF file. Ex:\n" +
      "utils.loadPlatform('ti.platforms.sim62xx', {deviceName: '###'});\n"); 
print("For more information, please refer to Chapter 4 of the Tconf User's " +
      "Guide \n(SPRU007G)");
/*
 *  @(#) ti.platforms.sim62xx; 1, 0, 0,277; 2-23-2010 16:51:56; /db/ztree/library/trees/platform/platform-k32x/src/
 */

