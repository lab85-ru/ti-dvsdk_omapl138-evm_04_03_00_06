/* --COPYRIGHT--,ESD
 *  Copyright (c) 2008 Texas Instruments. All rights reserved. 
 *  This program and the accompanying materials are made available under the 
 *  terms of the Eclipse Public License v1.0 and Eclipse Distribution License
 *  v. 1.0 which accompanies this distribution. The Eclipse Public License is
 *  available at http://www.eclipse.org/legal/epl-v10.html and the Eclipse
 *  Distribution License is available at 
 *  http://www.eclipse.org/org/documents/edl-v10.php.
 *
 *  Contributors:
 *      Texas Instruments - initial implementation
 * --/COPYRIGHT--*/
var LEVELS = [
    'ASSERT',
    'ENTRY',
    'EXIT',
    'INTERNAL',
    'LIFECYCLE',
    'USER1',
    'USER2',
    'USER3',
    'USER4',
    'USER5',
    'USER6',
    'USER7',
    'USER8',
];

var init;

/*
 *  ======== initLevels ========
 */
function initLevels()
{
    if (init == null) {
        init = true;
        LEVELS = [];
        var Types = xdc.module("xdc.runtime.Types");
        for (var name in Types.common$) {
            if (name.substring(0, 6) == "diags_") {
                LEVELS.push(name.substring(6));
            }
        }
    }
}

/*
 *  ======== module$static$init ========
 */
function module$static$init(obj, params)
{
    initLevels();

    for each (var mod in Program.targetModules()) {

        if (mod.PROXY$) {
            continue;
        }

        var dincl = 0; /* bits that could be ON on runtime */
        var denab = 0; 
        var dmask = 0;

        for each (var dl in LEVELS) {
            switch (mod.common$['diags_' + dl]) {
                case this.ALWAYS_OFF:
                    break;
                case this.ALWAYS_ON:
                    dincl |= this[dl];
                    denab |= this[dl];
                    break;
                case this.RUNTIME_OFF:
                    dincl |= this[dl];
                    if (!Program.frozenRomConfig(this.$name, 'setMaskEnabled')) {
                        this.setMaskEnabled = true;
                    }
                    break;
                case this.RUNTIME_ON:
                    dincl |= this[dl];
                    dmask |= this[dl];
                    if (!Program.frozenRomConfig(this.$name, 'setMaskEnabled')) {
                        this.setMaskEnabled = true;
                    }
                    break;
            }
            mod.common$.$seal('diags_' + dl);
        }

        mod.$unseal('Module__diagsEnabled');
        mod.$unseal('Module__diagsIncluded');
        mod.$unseal('Module__diagsMask');
        mod.Module__diagsEnabled = denab;
        mod.Module__diagsIncluded = dincl;

        mod.$$bind('$$diagsMask', dmask);
        mod.Module__diagsMask = $externPtr(mod.$name.replace(/\./g, '_')
            + '_Module__root__V.hdr.diagsMask');

        Program.freezeRomConfig(mod.$name, 'Module__diagsEnabled');
        Program.freezeRomConfig(mod.$name, 'Module__diagsIncluded');
        Program.freezeRomConfig(mod.$name, 'Module__diagsMask');
        mod.$seal('Module__diagsEnabled');
        mod.$seal('Module__diagsIncluded');
        mod.$seal('Module__diagsMask');
    }

    /* if the Diags_setmask() function is enabled, reference a table of
     * name:value pairs generated by Dict.xdt that allow Diags_setMask()
     * to look up module masks by the module's name
     */
    if (this.setMaskEnabled) {
        this.dictBase = '&xdc_runtime_Diags_dictElems[0]';
    }
}

/*
 *  ======== setMaskMeta ========
 */
function setMaskMeta(pat, mask, mode)
{
    if (typeof pat == 'string') {
        pat = '^' + pat.replace(/\./g, '\\.').replace(/%$/, '.*') + '$';
    }

    var re = RegExp(pat);

    initLevels();

    for each (var mod in xdc.om.$modules) {
        if (mod.$hostonly || !mod.$used || mod.PROXY$) {
            continue;
        }
        if (mod.$name.match(re)) {
            for each (var dl in LEVELS) {
                if (mask & this[dl]) {
                    mod.common$['diags_' + dl] = mode;
                }
            }
        }
    }
}
/*
 *  @(#) xdc.runtime; 2, 0, 0, 0,237; 2-22-2010 10:33:57; /db/ztree/library/trees/xdc/xdc-u17x/src/packages/
 */

