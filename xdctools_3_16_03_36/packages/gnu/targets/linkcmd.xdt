%%{
/* 
 *  Copyright (c) 2008 Texas Instruments and others.
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 * 
 *  Contributors:
 *      Texas Instruments - initial implementation
 * 
 * */

/* Linker templates are passed the following arguments:
 *      $out        - an open file stream for the generated linker
 *                    command file
 *      $args[]     - array of zero or more libraries that should be linked
 *                    with (in the order they appear in the argument list)
 *
 *  We can't add "'s around names; otherwise the GNU linker looks for names
 *  with "'s.
 *
 *  The GNU linker accepts any text file as "command files", so there is no
 *  need to use a special option to identify them.  In fact, if you use the
 *  -T option you must also include the default linker command file (which
 *  defines the memory map, sections, etc).  By not using -T, this command
 *  file "accumulates" with the default.
 */

 /* get the GNU compiler version from the version number returned by ITarget */
 var VERSION = this.build.target.version.split(',')[2] - 0;

 /* guess(!) the default leading prefix convention for this compiler */
 var PREFIX  = this.build.target.os == "Windows" ? "_" : "";
%%}
/* this file was generated by linkcmd.xdt from the gnu.targets package */

/* function aliases */
%if (prog.build.profile.match(/blas/) == null) {
%    for (var keys = this.$$aliases.keys(); keys.hasMoreElements(); ) {
%        var key = keys.nextElement();
`PREFIX + key` = `PREFIX + this.$$aliases.get(key)`;
%    }
%}

%if ($args.length > 0) {
/* input libraries */
INPUT(
    %for (var i = 0; i < $args.length; i++) {
    "`$args[i]`"
    %}
)
%}

%var _utils = xdc.loadCapsule("gnu/targets/linkUtils.xs");
%/* Mingw compilers do not work with the SECTIONS directive.
% */
%if (prog.build.target.$name != "gnu.targets.Mingw") {
SECTIONS {
`_utils.genSections(prog)`
}

%if (xdc.om['xdc.runtime.Text'].isLoaded != true) {
ASSERT(ADDR(xdc.noload) + SIZEOF(xdc.noload) < ADDR(.rodata)
    || ADDR(.rodata) + SIZEOF(.rodata) < ADDR(xdc.noload),
    "Sections .rodata and xdc.noload overlap. See xdc.runtime.Text.isLoaded for more.")
%}
%} // end of the workaround for Mingw
%%{
/*
 * @(#) gnu.targets; 1, 0, 1,387; 2-24-2010 16:24:01; /db/ztree/library/trees/xdctargets/xdctargets-b36x/src/
 */

%%}
