C6RunApp Back-end Libraries
===========================

How The DSP-side Library Is Built
---------------------------------
1) The DSP/BIOS configuration is performed, using the configuration provided in the 
   DSPlink package for the specified platform. Source files and a linker command
   file are generated by this step.
2) The replacement BIOS entry and exit points are built (replaces the part of BIOS
   that calls main() with one that calls _C6Run_main and replaces the part of BIOS that 
   exits the application)
3) C6Run task program is built. This program creates a single BIOS task which for C6RunApp
   calls the user-supplied main() function or for C6RunLib calls the remote procedure call
   dispatch loop.
4) IPC code is built. This code provides the interface betweeen the ARM and DSP cores and
   make use of DSPLink APIs.
4) CIO replacement code is built. These provide a new low-level implementation of a few
   functionsof the DSP RTS lib so that CIO calls are mapped back to the ARM via DSPLink.
5) The DSPLink DSP-side libraries are extracted so that all the object files
   from those libraries are available in a temporary local location.
6) All the above object files are archived to create the C6Run dsp-side library. Debug 
   and release versions are built.


How The GPP-side Library Is Built
---------------------------------
1) IPC code is built. This code provides the interface betweeen the ARM and DSP cores and
   make use of DSPLink APIs.
2) C6Run top-level code is built. This provides setup and tear-down mechanisms for the 
   C6Run framework.  Uses the IPC code.  Also includes a CIO server thread for receiving 
   and processing CIO requests from the DSP.
3) Dipatch routines for RPC function calls are built (these only get used for C6RunLib 
   builds).
4) User-space CMEM and GPP-side DSPLink libraries are extracted to temporary local 
   locations for inclusion in the final GPP-side library.
5) All the above object files are archived into C6Run gpp-side library. Debug 
   and release versions are built.
