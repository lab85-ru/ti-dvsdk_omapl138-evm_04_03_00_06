#############################################################################
# lpm.mak                                                                   #
#                                                                           #
# Targets to build Local Power Manager components                           #
#############################################################################
#
#
#############################################################################
#                                                                           #
#   Copyright (C) 2010 Texas Instruments Incorporated                       #
#     http://www.ti.com/                                                    #
#                                                                           #
#############################################################################
#
#
#############################################################################
#                                                                           #
#  Redistribution and use in source and binary forms, with or without       #
#  modification, are permitted provided that the following conditions       #
#  are met:                                                                 #
#                                                                           #
#    Redistributions of source code must retain the above copyright         #
#    notice, this list of conditions and the following disclaimer.          #
#                                                                           #
#    Redistributions in binary form must reproduce the above copyright      #
#    notice, this list of conditions and the following disclaimer in the    #
#    documentation and/or other materials provided with the                 #
#    distribution.                                                          #
#                                                                           #
#    Neither the name of Texas Instruments Incorporated nor the names of    #
#    its contributors may be used to endorse or promote products derived    #
#    from this software without specific prior written permission.          #
#                                                                           #
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      #
#  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        #
#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    #
#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     #
#  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    #
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT         #
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,    #
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY    #
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT      #
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE    #
#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.     #
#                                                                           #
#############################################################################


#   ----------------------------------------------------------------------------
#   Include the top-level Rules.mak file
#   ----------------------------------------------------------------------------
include ../config.mak
include ../Rules.mak


#   ----------------------------------------------------------------------------
#   Platform directory definition
#   ----------------------------------------------------------------------------
PLATFORMDIR := $(C6RUN_INSTALL_DIR)/platforms/$(PLATFORM)

#   ----------------------------------------------------------------------------
#   LPM directory definition
#   ----------------------------------------------------------------------------
LPMLIB_PATH := $(LPM_INSTALL_DIR)/packages/ti/bios/power/src/lpm

LPM_LIBS := lpm.lib
LPMPATH := $(LPM_INSTALL_DIR)/packages/ti/bios/power/lib
LPMPATH_D := $(LPMPATH)/debug
LPMPATH_R := $(LPMPATH)/release
LPM_LIBS_R := $(LPM_LIBS:%.lib=$(LPMPATH_R)/%.av5T)
LPM_LIBS_D := $(LPM_LIBS:%.lib=$(LPMPATH_D)/%.av5T)

MOD_PATH := $(LPM_INSTALL_DIR)/packages/ti/bios/power/modules/$(LPM_DSP_POWER_SOC)/lpm


#   ----------------------------------------------------------------------------
#   Compiler and Linker procedure
#   ----------------------------------------------------------------------------
.PHONY:	all gpp_libs kernel_mod config install_kernel_mod

# The default build target.
all: gpp_libs kernel_mod

config: 
	@echo "/* Generated by ti-local-power-manager.inc OE recipe */" > $(LPM_INSTALL_DIR)/config.bld
	@echo "var Build = xdc.useModule('xdc.bld.BuildEnvironment');" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "var GCArmv5T = xdc.useModule('gnu.targets.arm.GCArmv5T');" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "GCArmv5T.LONGNAME = \"bin/arm-none-linux-gnueabi-gcc\";" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "GCArmv5T.rootDir = \"$(ARM_TOOLCHAIN_PATH)\";" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "GCArmv5T.ccOpts.prefix += \" -Wall -fno-strict-aliasing \";" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "GCArmv5T.lnkOpts.suffix = GCArmv5T.lnkOpts.suffix.replace(\"-lstdc++\", \"\");" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "GCArmv5T.lnkOpts.suffix += \" -lpthread \";" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "GCArmv5T.platform = null;" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "GCArmv5T.platforms = [" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "  \"ti.platforms.evm3530\"" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "];" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "/* remove profiles we don't use */" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "delete GCArmv5T.profiles[\"coverage\"];" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "delete GCArmv5T.profiles[\"profile\"];" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "Build.targets.\$$add(GCArmv5T);" >> $(LPM_INSTALL_DIR)/config.bld


#   ----------------------------------------------------------------------------
#   Build the GPP libraries
#   ----------------------------------------------------------------------------
gpp_libs: config
	@echo "/* Generated by ti-local-power-manager.inc OE recipe */" > $(LPM_INSTALL_DIR)/config.bld
	@echo "var Build = xdc.useModule('xdc.bld.BuildEnvironment');" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "var GCArmv5T = xdc.useModule('gnu.targets.arm.GCArmv5T');" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "GCArmv5T.LONGNAME = \"bin/arm-none-linux-gnueabi-gcc\";" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "GCArmv5T.rootDir = \"$(ARM_TOOLCHAIN_PATH)\";" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "GCArmv5T.ccOpts.prefix += \" -Wall -fno-strict-aliasing \";" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "GCArmv5T.lnkOpts.suffix = GCArmv5T.lnkOpts.suffix.replace(\"-lstdc++\", \"\");" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "GCArmv5T.lnkOpts.suffix += \" -lpthread \";" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "GCArmv5T.platform = null;" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "GCArmv5T.platforms = [" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "  \"ti.platforms.evm3530\"" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "];" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "/* remove profiles we don't use */" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "delete GCArmv5T.profiles[\"coverage\"];" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "delete GCArmv5T.profiles[\"profile\"];" >> $(LPM_INSTALL_DIR)/config.bld
	@echo "Build.targets.\$$add(GCArmv5T);" >> $(LPM_INSTALL_DIR)/config.bld
	@echo -n "Building LPM GPP-side userspace libraries..."
	cd $(LPM_INSTALL_DIR); \
    XDCOPTIONS=-v XDCPATH=$(LPM_INSTALL_DIR) ${XDC_INSTALL_DIR}/xdc -PR .
	@echo "complete!"


#   ----------------------------------------------------------------------------
#   Build the DSPLink kernel module for the configured platform, and make sure the
#   kernel_binaries directory is kept in sync. 
#   ----------------------------------------------------------------------------
kernel_mod: config
	@echo -n "Building LPM kernel module..."
	@$(MAKE) -C $(MOD_PATH) \
    MVTOOL_PREFIX=$(ARM_TOOLCHAIN_PATH)/bin/$(ARM_TOOLCHAIN_PREFIX) \
    LINUXKERNEL_INSTALL_DIR=$(LINUXKERNEL_INSTALL_DIR) \
    DSPLINK_REPO="${LINK_INSTALL_DIR}" \
    clean default >> /dev/null
	@echo "complete!"
  
install_kernel_mod:
ifdef INSTALL_DIR
	@if [ -e $(MOD_PATH)/lpm_*.ko ]; then \
    echo "LPM kernel module found. Copying to install directory..."; \
    install -m 755 $(MOD_PATH)/lpm_*.ko $(INSTALL_DIR)/; \
  fi
else
	@echo "You did not specify a valid INSTALL_DIR variable when running 'make install_kernel_mod'."
endif
  
#   ----------------------------------------------------------------------------
#   Clean Rule(s)
#   ----------------------------------------------------------------------------
.PHONY: clean gpp_libs_clean kernel_mod_clean
clean: gpp_libs_clean kernel_mod_clean

gpp_libs_clean: config 
  # Peform clean on LPM user-space library build
	@echo -n "Peforming clean on LPM GPP-side user-space libraries..."
#	cd $(LPM_INSTALL_DIR); \
#    XDCOPTIONS=-v XDCPATH=$(LPM_INSTALL_DIR) ${XDC_INSTALL_DIR}/xdc clean -PR .
	@echo "complete!"

kernel_mod_clean:
	@echo -n "Cleaning up LPM kernel module..."
	@$(MAKE) -C $(MOD_PATH) \
    MVTOOL_PREFIX=$(ARM_TOOLCHAIN_PATH)/bin/$(ARM_TOOLCHAIN_PREFIX) \
    LINUXKERNEL_INSTALL_DIR=$(LINUXKERNEL_INSTALL_DIR) \
    DSPLINK_REPO="${LINK_INSTALL_DIR}" \
    clean >> /dev/null
	@if [ -e $(MOD_PATH)/lpm_*.ko ]; then \
    rm -Rf $(MOD_PATH)/lpm_*.ko; \
  fi
	@echo "complete!"
