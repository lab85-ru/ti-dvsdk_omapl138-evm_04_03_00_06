/*
 *  Copyright 2010 by Texas Instruments Incorporated.
 *  @(#) DSP/BIOS_Kernel 5,2,5,28 02-10-2010 (cuda-u28)
 */
/*
 *  ======== bios_6713.tci ========
 *  This file contains BIOS settings for 6713.
 *
 */

/*
 *  ======== bios.internal.setupMemory6713 ========
 *  This function is the top-level function that will remove all MEM segments
 *  from the cdb file.  It will take your physical memory map from calling
 *  getMemoryMap() and create MEM instances in cdb.
 *  It will then set sections to the default segment specified and fix up
 *  the length and/or base of MEM segments if needed.
 */
bios.internal.setupMemory6713 = function (prog)
{
    /*
     *  BIOS MEM segments will be created from object model memory definitions.
     *  Place default code and data sections into specified memory segments.
     */
    bios.initializeMemory(prog, "IRAM", "IRAM");
    var iram = prog.module("MEM").instance("IRAM");
    bios.internal.setupCache6713(prog, iram);
}

/*
 *  ======== bios.internal.setupCache6713 ========
 */
bios.internal.setupCache6713 = function (prog, iram)
{
    var cpu = prog.cpu;
    var cache = prog.module("MEM").instance("CACHE_L2");

    cache.len = 0x0;
    cache.base = 0x40000;

    if (cpu.registers.l2Mode != null) {
	if (cpu.registers.l2Mode == "SRAM") {
	    iram.len = 0x40000;
	}
	else if (cpu.registers.l2Mode == "1-way cache") {
	    iram.len = 0x3c000;
	}
	else if (cpu.registers.l2Mode == "2-way cache") {
	    iram.len = 0x38000;
	}
	else if (cpu.registers.l2Mode == "3-way cache") {
	    iram.len = 0x34000;
	}
	else if (cpu.registers.l2Mode == "4-way cache") {
	    iram.len = 0x30000;
	}
    }
    else {
        iram.len = 0x40000
    }
}

/*
 *  ======== bios.init6713 ========
 *  BIOS initialization for the 6713
 */
bios.init6713 = function (prog, baseseed)
{
    /*
     *  Find configuration seed files to load
     */
    if (baseseed == null) {
	baseseed = "ti/bios/config/cdb/c6x1x.cdb";
    }

    var seed = utils.findSeed(baseseed);
    if (seed != null) {
	try {
	    prog.load(seed);
	}
	catch (e) {
	    throw new Error ("Can't load configuration seed '" + seed + "' : "
		+ e);
	}
    }
    else {
	throw new Error ("Can't find configuration seed: " + baseseed);
    }

    prog.module("GBL").CHIPTYPE = prog.cpu.deviceName;

    /* set CLKOUT to be the value of cpu.clockRate. */
    bios.internal.setClkout(prog);

    /* Set endian mode based on build options */
    prog.module("GBL").ENDIANMODE = prog.build.target.model.endian;

    /* Do Not Configure the L2 Cache */
    prog.module("GBL").C621XCONFIGUREL2 = false;

    /* If the old memory names are used, we call the function that sets up
     * the old external memory names, while the internal names (and some old 
     * ones are retained from the CDB file.
     */
    if (bios.supportOldMemoryNames) {
	bios.internal.oldMemoryNames(prog);
	/* set the IRAM length to 0x40000 */
	prog.module("MEM").instance("IRAM").len = 0x40000;
    }
    else {
	/* set the default memory segments for 6713 using new memory names */
	bios.internal.setupMemory6713(prog);
    }

    /* initialize some memory map registers */
    bios.internal.initializeRegisterMap(prog);
}
