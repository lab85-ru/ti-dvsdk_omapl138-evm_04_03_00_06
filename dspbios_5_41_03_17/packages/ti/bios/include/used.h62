;
;  Copyright 2010 by Texas Instruments Incorporated.
;  @(#) DSP/BIOS_Kernel 5,2,5,28 02-10-2010 (cuda-u28)
;
;
;  ======== used.hXX ======== 
;  this file was generated by 'mkused.sh'


;
; ======== c62.h62 ========
;
        .asg    "", C62_set$regs

;
; ======== chk.h62 ========
;
        .asg    "", CHK_nargs$regs
        .asg    "", CHK_void$regs
        .asg    "", CHK_domain$regs
        .asg    "", CHK_config$regs
        .asg    "", CHK_end$regs
        .asg    "", CHK_init$regs

;
; ======== clk.h62 ========
;
        .asg    "", CLK_Obj$regs
        .asg    "", CLK_config$regs
        .asg    "a4", CLK_countspms$regs
        .asg    ":CLK_Obj$regs:", CLK_end$regs
        .asg "b3,:CLK_F_getshtime$regs:", CLK_gethtime$regs
        .asg "a4", CLK_getltime$regs
        .asg "a4", CLK_getprd$regs
        .asg "", CLK_init$regs
        .asg "b3,:CLK_F_itime$regs:", CLK_itime$regs
        .asg "a0,a1,b1,b2,ier", CLK_startup$regs

;
; ======== fxn.h62 ========
;
        .asg    "", FXN_Obj$regs
        .asg    "", FXN_config$regs
        .asg    "", FXN_end$regs
        .asg    "", FXN_init$regs
        .asg "a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,b0,b1,b2,b3,b4,b5,b6,b7,b8,b9", FXN_execute$regs
        .asg    "", FXN_startup$regs

;
; ======== gbl.h62 ========
;
        .asg    "", GBL_Obj$regs
        .asg    "", GBL_config$regs
        .asg    "", GBL_end$regs
        .asg    "", GBL_init$regs
        .asg    "", GBL_startup$regs
        .asg    "", GBL_varaible$regs

;
; ======== hst.h62 ========
;
        .asg    ":GBL_Obj$regs:,:PIP_Obj$regs:", HST_Obj$regs
        .asg    "", HST_config$regs
        .asg    "", HST_end$regs
        .asg    "a4", HST_getpipe$regs
        .asg "LNK_init$regs", HST_init$regs
        .asg "", HST_startup$regs

;
; ======== hwi.h62 ========
;
        .asg    ":HWI_mkStub$regs:", HWI_Obj$regs
        .asg    "", HWI_config$regs
        .asg "a4,b0,csr",HWI_disable$regs
        .asg "b0,csr",HWI_enable$regs
        .asg    "", HWI_mkStub$regs
        .asg "a1,b0,csr",HWI_restore$regs
        .asg    "", HWI_end$regs
        .asg    "a0,b1,icr,ier", HWI_init$regs
        .asg ":HWI_enable$regs:", HWI_startup$regs
        .asg "a0,a1,amr,b0,b1,b14,b15,b2,b3,csr,ier", HWI_enter$regs
        .asg "a0,a1,a2,a3,amr,b0,b1,b14,b15,b2,b3,csr,ier,irp",HWI_exit$regs

;
; ======== idl.h62 ========
;
        .asg    "", IDL_Obj$regs
    .asg    "", IDL_config$regs
    .asg    ":IDL_Obj$regs:", IDL_end$regs
    .asg    "a1,a4,b3", IDL_init$regs
    .asg "a4,:IDL_F_loop$regs:", IDL_loop$regs
    .asg "b3,:FXN_F_run$regs:", IDL_run$regs
    .asg    "", IDL_startup$regs

;
; ======== lnk.h62 ========
;
        .asg    "", LNK_Obj$regs
        .asg    "", LNK_config$regs
        .asg    "", LNK_end$regs
        .asg "", LNK_init$regs
        .asg "", LNK_startup$regs

;
; ======== log.h62 ========
;
        .asg    ":GBL_Obj$regs:", LOG_Obj$regs
        .asg    "", LOG_config$regs
        .asg    "a0", LOG_disable$regs
        .asg    "a0", LOG_enable$regs
        .asg    "", LOG_end$regs
        .asg "a4,a6,b3,b6,:LOG_F_event$regs:", LOG_error$regs
        .asg    "b3,:LOG_F_event$regs:", LOG_event$regs
        .asg    "", LOG_init$regs
        .asg "a1,a4,a6,b3,b6,:TRC_query$regs:,:LOG_F_event$regs:", LOG_message$regs
        .asg    "b3,b6,:LOG_F_event$regs:", LOG_printf$regs
        .asg "b3,:LOG_F_reset$regs:", LOG_reset$regs
        .asg    "", LOG_startup$regs

;
; ======== mem.h62 ========
;
    .asg    "", MEM_Obj$regs
    .asg    "", MEM_config$regs
    .asg    ":MEM_Obj$regs:", MEM_end$regs
    .asg    "", MEM_startup$regs
        .asg    "", MEM_init$regs

;
; ======== pip.h62 ========
;
        .asg    ":GBL_Obj$regs:,:FXN_Obj$regs:,:STS_Obj$regs:", PIP_Obj$regs
        .asg    "", PIP_config$regs
        .asg    "", PIP_end$regs
        .asg    "", PIP_init$regs
        .asg "a1,a4,a5,b3,:PIP_F_take$regs:", PIP_alloc$regs
        .asg "a0,a1,a4,a5,b3,b4,:PIP_F_give$regs:", PIP_put$regs
        .asg "a1,a4,a5,b3,:PIP_F_take$regs:", PIP_get$regs
        .asg "a1,a4,a5,b3,b4,:PIP_F_give$regs:", PIP_free$regs
        .asg "a4,b3,b4,:PIP_F_start$regs:", PIP_startup$regs
        .asg "", PIP_readprobeSET$regs
        .asg    "", PIP_readprobeCLR$regs
        .asg    "", PIP_writeprobeSET$regs
        .asg    "", PIP_writeprobeCLR$regs

;
; ======== prd.h62 ========
;
        .asg    ":FXN_Obj$regs:,:STS_Obj$regs:", PRD_Obj$regs
        .asg    "", PRD_config$regs
        .asg    "", PRD_end$regs
        .asg    "", PRD_init$regs
        .asg    "a0,a1,a2,b0,b1", PRD_start$regs
        .asg    "a1,b1", PRD_stop$regs
        .asg    "", PRD_startup$regs
        .asg    "b3,:PRD_F_tick$regs:", PRD_tick$regs
        .asg    "a4", PRD_getticks$regs

;
; ======== rta.h62 ========
;
        .asg    "", RTA_config$regs
        .asg    "", RTA_end$regs
        .asg    "", RTA_init$regs
        .asg "", RTA_startup$regs

;
; ======== std.h62 ========
;

;
; ======== sts.h62 ========
;
        .asg    "", STS_Obj$regs
        .asg "b3,:STS_F_add$regs:", STS_add$regs
        .asg    "", STS_config$regs
        .asg "b3,:STS_F_delta$regs:", STS_delta$regs
        .asg    "", STS_end$regs
        .asg "", STS_init$regs
        .asg "a1", STS_reset$regs
        .asg "", STS_set$regs
        .asg    "", STS_startup$regs

;
; ======== swi.h62 ========
;
        .asg    ":FXN_Obj$regs:,:STS_Obj$regs:", SWI_Obj$regs
        .asg "a1,b2,b3,b4,b7,:SWI_F_post$regs:", SWI_andn$regs
        .asg "a1,a4", SWI_busy$regs
        .asg "", SWI_config$regs
        .asg "a1,b2,b3,b4,b7,:SWI_F_post$regs:", SWI_dec$regs
        .asg "a4", SWI_disable$regs
        .asg "b3,:SWI_F_enable$regs:", SWI_enable$regs
        .asg    "", SWI_end$regs
        .asg "a4", SWI_getpri$regs
        .asg "a1,a2,b3,:SWI_F_post$regs:", SWI_inc$regs
        .asg    "", SWI_init$regs
        .asg "a1,a2,b3,:SWI_F_post$regs:", SWI_or$regs
        .asg "b3,:SWI_F_post$regs:", SWI_post$regs
        .asg    "a1,a2,a4", SWI_raisepri$regs
        .asg    ":SWI_F_restorepri$regs:", SWI_restorepri$regs
        .asg "a4", SWI_getmbox$regs
        .asg    "a4,b4", SWI_self$regs
        .asg "a4,:SWI_enable$regs:", SWI_startup$regs
        .asg "a4", SWI_unlocked$regs

;
; ======== trc.h62 ========
;
        .asg    "", TRC_config$regs
        .asg    "", TRC_end$regs
        .asg    "a2,a4", TRC_init$regs
        .asg "a2,a4", TRC_disable$regs
        .asg    "a2,a4", TRC_enable$regs
        .asg    "a2,a4", TRC_query$regs
        .asg "", TRC_startup$regs

;
; ======== biosdata.s62 ========
;

;
; ======== clk.s62 ========
;
        .asg "a4", CLK_F_getfhtime$regs
        .asg "a2,a3,a4,a5,b1,b2,b4,b5", CLK_F_getshtime$regs
        .asg "a4", CLK_F_getltime$regs
        .asg "", CLK_F_isr$regs
        .asg "a1,b0,b1,:CLK_F_getshtime$regs:", CLK_F_itime$regs

;
; ======== clk_rete.s62 ========
;
        .asg "", CLK_F_rete$regs

;
; ======== fxn.s62 ========
;
        .asg    "", FXN_F_nop$regs
        .asg    "a1,a2,a4", FXN_F_run$regs
        .asg    "a4", FXN_F_zero$regs

;
; ======== gbl_vers.s62 ========
;
        .asg    "a4", GBL_F_version$regs

;
; ======== hwi.s62 ========
;

;
; ======== hwi_disp_asm.s62 ========
;

;
; ======== hwi_disp_asm64.s62 ========
;

;
; ======== idl.s62 ========
;
        .asg    "a4,b3,:FXN_F_run$regs:", IDL_F_loop$regs

;
; ======== idl_busy.s62 ========
;
        .asg "a4,b4,:STS_F_delta$regs:", IDL_F_busy$regs

;
; ======== idl_cal.s62 ========
;
        .asg    "a0,a1,a2,a4,b1,b2", IDL_F_calibrate$regs

;
; ======== log.s62 ========
;
        .asg "a0,a1,a2,a3,a7,b0,b2,b5,b7", LOG_F_event$regs

;
; ======== log_rese.s62 ========
;
        .asg "a0,a1,b0,b1", LOG_F_reset$regs

;
; ======== mem_asm.s62 ========
;

;
; ======== pip.s62 ========
;
        .asg "a0,a1,a2,a4,:FXN_execute$regs:,:PIP_F_probe$regs:", PIP_F_take$regs
        .asg "", PIP_F_probe$regs
        .asg "a1,a2,a3,a4,b0,b1,b4,:STS_add$regs:,:TRC_query$regs:", PIP_F_give$regs
        .asg "a1,a4,a5,b0,:FXN_execute$regs:", PIP_F_start$regs

;
; ======== prd.s62 ========
;
        .asg    "a1,a4,a5,a6,a9,b0,b1,b2,b4,b5,b6,:FXN_execute$regs:,:LOG_event$regs:,:STS_add$regs:,:TRC_query$regs:", PRD_F_swi$regs
        .asg "a1,a4,a6,a8,a9,b0,b1,b4,b6,b8,:LOG_event$regs:,:SWI_post$regs:,:TRC_query$regs:", PRD_F_tick$regs

;
; ======== rta.s62 ========
;
        .asg "a0,a1,b0,b3,b4,b6,:RTA_F_resetmem$regs:", RTA_F_getlog$regs
        .asg "a0,a1,a4,b0,b3,b4,b6,:RTA_F_resetmem$regs:", RTA_F_getsts$regs
        .asg  "a1,a4,a6,b0,b6", RTA_F_readblk$regs
        .asg "", RTA_F_writeword$regs
        .asg "a4,a5,a6,b1,b2,b4,b7", RTA_F_resetmem$regs
        .asg "a0,a1,a2,a4,a6,b0,b1,b2,b4,:FXN_execute$regs:,:PIP_alloc$regs:,:PIP_free$regs:,:PIP_get$regs:,:PIP_put$regs:", RTA_F_dispatch$regs

;
; ======== rta_andn.s62 ========
;
        .asg "a1,b4", RTA_F_andn$regs
        .asg "a1", RTA_F_or$regs

;
; ======== sts.s62 ========
;
        .asg "b1,b4,b5,:STS_F_add$regs:", STS_F_delta$regs
        .asg "a1,a3,b1,b2", STS_F_add$regs
        .asg    "a1", STS_F_reset$regs

;
; ======== swi.s62 ========
;
        .asg "a1,b0,b1,b4,:HWI_disable$regs:,:HWI_restore$regs:,:SWI_F_exec$regs:", SWI_F_enable$regs
        .asg "a0,a1,a4,a6,a9,b0,b1,b2,b4,b6,:LOG_event$regs:,:CLK_F_itime$regs:,:STS_set$regs:,:TRC_query$regs:,:SWI_F_exec$regs:", SWI_F_post$regs
        .asg "csr", SWI_F_exec$regs
        .asg    "a0,a1,a2,a3,a4,a5,a6,b0,b1,b2,b4,b5,b6,b9,:HWI_disable$regs:,:HWI_enable$regs:,:FXN_execute$regs:,:LOG_event$regs:,:CLK_F_itime$regs:,:STS_delta$regs:,:TRC_query$regs:",SWI_F_run$regs

;
; ======== swi_pri.s62 ========
;
        .asg    "a1,a2,a4,b0,:HWI_disable$regs:,:SWI_F_exec$regs:", SWI_F_restorepri$regs

;
; ======== trc.s62 ========
;

;
; ======== c62.h62 ========
;
        .asg    "", C62_set$regs

;
; ======== chk.h62 ========
;
        .asg    "", CHK_nargs$regs
        .asg    "", CHK_void$regs
        .asg    "", CHK_domain$regs
        .asg    "", CHK_config$regs
        .asg    "", CHK_end$regs
        .asg    "", CHK_init$regs

;
; ======== clk.h62 ========
;
        .asg    "", CLK_Obj$regs
        .asg    "", CLK_config$regs
        .asg    "a4", CLK_countspms$regs
        .asg    ":CLK_Obj$regs:", CLK_end$regs
        .asg "b3,:CLK_F_getshtime$regs:", CLK_gethtime$regs
        .asg "a4", CLK_getltime$regs
        .asg "a4", CLK_getprd$regs
        .asg "", CLK_init$regs
        .asg "b3,:CLK_F_itime$regs:", CLK_itime$regs
        .asg "a0,a1,b1,b2,ier", CLK_startup$regs

;
; ======== fxn.h62 ========
;
        .asg    "", FXN_Obj$regs
        .asg    "", FXN_config$regs
        .asg    "", FXN_end$regs
        .asg    "", FXN_init$regs
        .asg "a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,b0,b1,b2,b3,b4,b5,b6,b7,b8,b9", FXN_execute$regs
        .asg    "", FXN_startup$regs

;
; ======== gbl.h62 ========
;
        .asg    "", GBL_Obj$regs
        .asg    "", GBL_config$regs
        .asg    "", GBL_end$regs
        .asg    "", GBL_init$regs
        .asg    "", GBL_startup$regs
        .asg    "", GBL_varaible$regs

;
; ======== hst.h62 ========
;
        .asg    ":GBL_Obj$regs:,:PIP_Obj$regs:", HST_Obj$regs
        .asg    "", HST_config$regs
        .asg    "", HST_end$regs
        .asg    "a4", HST_getpipe$regs
        .asg "LNK_init$regs", HST_init$regs
        .asg "", HST_startup$regs

;
; ======== hwi.h62 ========
;
        .asg    ":HWI_mkStub$regs:", HWI_Obj$regs
        .asg    "", HWI_config$regs
        .asg "a4,b0,csr",HWI_disable$regs
        .asg "b0,csr",HWI_enable$regs
        .asg    "", HWI_mkStub$regs
        .asg "a1,b0,csr",HWI_restore$regs
        .asg    "", HWI_end$regs
        .asg    "a0,b1,icr,ier", HWI_init$regs
        .asg ":HWI_enable$regs:", HWI_startup$regs
        .asg "a0,a1,amr,b0,b1,b14,b15,b2,b3,csr,ier", HWI_enter$regs
        .asg "a0,a1,a2,a3,amr,b0,b1,b14,b15,b2,b3,csr,ier,irp",HWI_exit$regs

;
; ======== idl.h62 ========
;
        .asg    "", IDL_Obj$regs
    .asg    "", IDL_config$regs
    .asg    ":IDL_Obj$regs:", IDL_end$regs
    .asg    "a1,a4,b3", IDL_init$regs
    .asg "a4,:IDL_F_loop$regs:", IDL_loop$regs
    .asg "b3,:FXN_F_run$regs:", IDL_run$regs
    .asg    "", IDL_startup$regs

;
; ======== lnk.h62 ========
;
        .asg    "", LNK_Obj$regs
        .asg    "", LNK_config$regs
        .asg    "", LNK_end$regs
        .asg "", LNK_init$regs
        .asg "", LNK_startup$regs

;
; ======== log.h62 ========
;
        .asg    ":GBL_Obj$regs:", LOG_Obj$regs
        .asg    "", LOG_config$regs
        .asg    "a0", LOG_disable$regs
        .asg    "a0", LOG_enable$regs
        .asg    "", LOG_end$regs
        .asg "a4,a6,b3,b6,:LOG_F_event$regs:", LOG_error$regs
        .asg    "b3,:LOG_F_event$regs:", LOG_event$regs
        .asg    "", LOG_init$regs
        .asg "a1,a4,a6,b3,b6,:TRC_query$regs:,:LOG_F_event$regs:", LOG_message$regs
        .asg    "b3,b6,:LOG_F_event$regs:", LOG_printf$regs
        .asg "b3,:LOG_F_reset$regs:", LOG_reset$regs
        .asg    "", LOG_startup$regs

;
; ======== mem.h62 ========
;
    .asg    "", MEM_Obj$regs
    .asg    "", MEM_config$regs
    .asg    ":MEM_Obj$regs:", MEM_end$regs
    .asg    "", MEM_startup$regs
        .asg    "", MEM_init$regs

;
; ======== pip.h62 ========
;
        .asg    ":GBL_Obj$regs:,:FXN_Obj$regs:,:STS_Obj$regs:", PIP_Obj$regs
        .asg    "", PIP_config$regs
        .asg    "", PIP_end$regs
        .asg    "", PIP_init$regs
        .asg "a1,a4,a5,b3,:PIP_F_take$regs:", PIP_alloc$regs
        .asg "a0,a1,a4,a5,b3,b4,:PIP_F_give$regs:", PIP_put$regs
        .asg "a1,a4,a5,b3,:PIP_F_take$regs:", PIP_get$regs
        .asg "a1,a4,a5,b3,b4,:PIP_F_give$regs:", PIP_free$regs
        .asg "a4,b3,b4,:PIP_F_start$regs:", PIP_startup$regs
        .asg "", PIP_readprobeSET$regs
        .asg    "", PIP_readprobeCLR$regs
        .asg    "", PIP_writeprobeSET$regs
        .asg    "", PIP_writeprobeCLR$regs

;
; ======== prd.h62 ========
;
        .asg    ":FXN_Obj$regs:,:STS_Obj$regs:", PRD_Obj$regs
        .asg    "", PRD_config$regs
        .asg    "", PRD_end$regs
        .asg    "", PRD_init$regs
        .asg    "a0,a1,a2,b0,b1", PRD_start$regs
        .asg    "a1,b1", PRD_stop$regs
        .asg    "", PRD_startup$regs
        .asg    "b3,:PRD_F_tick$regs:", PRD_tick$regs
        .asg    "a4", PRD_getticks$regs

;
; ======== rta.h62 ========
;
        .asg    "", RTA_config$regs
        .asg    "", RTA_end$regs
        .asg    "", RTA_init$regs
        .asg "", RTA_startup$regs

;
; ======== std.h62 ========
;

;
; ======== sts.h62 ========
;
        .asg    "", STS_Obj$regs
        .asg "b3,:STS_F_add$regs:", STS_add$regs
        .asg    "", STS_config$regs
        .asg "b3,:STS_F_delta$regs:", STS_delta$regs
        .asg    "", STS_end$regs
        .asg "", STS_init$regs
        .asg "a1", STS_reset$regs
        .asg "", STS_set$regs
        .asg    "", STS_startup$regs

;
; ======== swi.h62 ========
;
        .asg    ":FXN_Obj$regs:,:STS_Obj$regs:", SWI_Obj$regs
        .asg "a1,b2,b3,b4,b7,:SWI_F_post$regs:", SWI_andn$regs
        .asg "a1,a4", SWI_busy$regs
        .asg "", SWI_config$regs
        .asg "a1,b2,b3,b4,b7,:SWI_F_post$regs:", SWI_dec$regs
        .asg "a4", SWI_disable$regs
        .asg "b3,:SWI_F_enable$regs:", SWI_enable$regs
        .asg    "", SWI_end$regs
        .asg "a4", SWI_getpri$regs
        .asg "a1,a2,b3,:SWI_F_post$regs:", SWI_inc$regs
        .asg    "", SWI_init$regs
        .asg "a1,a2,b3,:SWI_F_post$regs:", SWI_or$regs
        .asg "b3,:SWI_F_post$regs:", SWI_post$regs
        .asg    "a1,a2,a4", SWI_raisepri$regs
        .asg    ":SWI_F_restorepri$regs:", SWI_restorepri$regs
        .asg "a4", SWI_getmbox$regs
        .asg    "a4,b4", SWI_self$regs
        .asg "a4,:SWI_enable$regs:", SWI_startup$regs
        .asg "a4", SWI_unlocked$regs

;
; ======== trc.h62 ========
;
        .asg    "", TRC_config$regs
        .asg    "", TRC_end$regs
        .asg    "a2,a4", TRC_init$regs
        .asg "a2,a4", TRC_disable$regs
        .asg    "a2,a4", TRC_enable$regs
        .asg    "a2,a4", TRC_query$regs
        .asg "", TRC_startup$regs

;
; ======== biosdata.s62 ========
;

;
; ======== clk.s62 ========
;
        .asg "a4", CLK_F_getfhtime$regs
        .asg "a2,a3,a4,a5,b1,b2,b4,b5", CLK_F_getshtime$regs
        .asg "a4", CLK_F_getltime$regs
        .asg "", CLK_F_isr$regs
        .asg "a1,b0,b1,:CLK_F_getshtime$regs:", CLK_F_itime$regs

;
; ======== clk_rete.s62 ========
;
        .asg "", CLK_F_rete$regs

;
; ======== fxn.s62 ========
;
        .asg    "", FXN_F_nop$regs
        .asg    "a1,a2,a4", FXN_F_run$regs
        .asg    "a4", FXN_F_zero$regs

;
; ======== gbl_vers.s62 ========
;
        .asg    "a4", GBL_F_version$regs

;
; ======== hwi.s62 ========
;

;
; ======== hwi_disp_asm.s62 ========
;

;
; ======== hwi_disp_asm64.s62 ========
;

;
; ======== idl.s62 ========
;
        .asg    "a4,b3,:FXN_F_run$regs:", IDL_F_loop$regs

;
; ======== idl_busy.s62 ========
;
        .asg "a4,b4,:STS_F_delta$regs:", IDL_F_busy$regs

;
; ======== idl_cal.s62 ========
;
        .asg    "a0,a1,a2,a4,b1,b2", IDL_F_calibrate$regs

;
; ======== log.s62 ========
;
        .asg "a0,a1,a2,a3,a7,b0,b2,b5,b7", LOG_F_event$regs

;
; ======== log_rese.s62 ========
;
        .asg "a0,a1,b0,b1", LOG_F_reset$regs

;
; ======== mem_asm.s62 ========
;

;
; ======== pip.s62 ========
;
        .asg "a0,a1,a2,a4,:FXN_execute$regs:,:PIP_F_probe$regs:", PIP_F_take$regs
        .asg "", PIP_F_probe$regs
        .asg "a1,a2,a3,a4,b0,b1,b4,:STS_add$regs:,:TRC_query$regs:", PIP_F_give$regs
        .asg "a1,a4,a5,b0,:FXN_execute$regs:", PIP_F_start$regs

;
; ======== prd.s62 ========
;
        .asg    "a1,a4,a5,a6,a9,b0,b1,b2,b4,b5,b6,:FXN_execute$regs:,:LOG_event$regs:,:STS_add$regs:,:TRC_query$regs:", PRD_F_swi$regs
        .asg "a1,a4,a6,a8,a9,b0,b1,b4,b6,b8,:LOG_event$regs:,:SWI_post$regs:,:TRC_query$regs:", PRD_F_tick$regs

;
; ======== rta.s62 ========
;
        .asg "a0,a1,b0,b3,b4,b6,:RTA_F_resetmem$regs:", RTA_F_getlog$regs
        .asg "a0,a1,a4,b0,b3,b4,b6,:RTA_F_resetmem$regs:", RTA_F_getsts$regs
        .asg  "a1,a4,a6,b0,b6", RTA_F_readblk$regs
        .asg "", RTA_F_writeword$regs
        .asg "a4,a5,a6,b1,b2,b4,b7", RTA_F_resetmem$regs
        .asg "a0,a1,a2,a4,a6,b0,b1,b2,b4,:FXN_execute$regs:,:PIP_alloc$regs:,:PIP_free$regs:,:PIP_get$regs:,:PIP_put$regs:", RTA_F_dispatch$regs

;
; ======== rta_andn.s62 ========
;
        .asg "a1,b4", RTA_F_andn$regs
        .asg "a1", RTA_F_or$regs

;
; ======== sts.s62 ========
;
        .asg "b1,b4,b5,:STS_F_add$regs:", STS_F_delta$regs
        .asg "a1,a3,b1,b2", STS_F_add$regs
        .asg    "a1", STS_F_reset$regs

;
; ======== swi.s62 ========
;
        .asg "a1,b0,b1,b4,:HWI_disable$regs:,:HWI_restore$regs:,:SWI_F_exec$regs:", SWI_F_enable$regs
        .asg "a0,a1,a4,a6,a9,b0,b1,b2,b4,b6,:LOG_event$regs:,:CLK_F_itime$regs:,:STS_set$regs:,:TRC_query$regs:,:SWI_F_exec$regs:", SWI_F_post$regs
        .asg "csr", SWI_F_exec$regs
        .asg    "a0,a1,a2,a3,a4,a5,a6,b0,b1,b2,b4,b5,b6,b9,:HWI_disable$regs:,:HWI_enable$regs:,:FXN_execute$regs:,:LOG_event$regs:,:CLK_F_itime$regs:,:STS_delta$regs:,:TRC_query$regs:",SWI_F_run$regs

;
; ======== swi_pri.s62 ========
;
        .asg    "a1,a2,a4,b0,:HWI_disable$regs:,:SWI_F_exec$regs:", SWI_F_restorepri$regs

;
; ======== trc.s62 ========
;
