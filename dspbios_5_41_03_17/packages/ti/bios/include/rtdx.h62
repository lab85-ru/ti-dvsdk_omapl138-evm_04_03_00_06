;
;  Copyright 2010 by Texas Instruments Incorporated.
;  @(#) DSP/BIOS_Kernel 5,2,5,28 02-10-2010 (cuda-u28)
;
;
;  ======== rtdx.h62 ========
;
;
        .if ($isdefed("RTDX_") = 0)  ; prevent multiple includes of this file
RTDX_   .set    1
        .include std.h62

;
;  ======== RTDX defs ========
;
RTDX_JTAGMODE .set      0
RTDX_HSRTDXMODE .set    1
RTDX_SIMMODE .set       2

;
;# ======== RTDX_Obj ========
;
;#
;# Preconditions:
;#      none
;#
;# Postconditions:
;#      none
;#
        .asg    "", RTDX_Obj$regs
RTDX_Obj  .macro cflag, name, id, chanmode
        .endm

;
;# ======== RTDX_config ========
;
;#
;# Preconditions:
;#      none
;#
;# Postconditions:
;#      none
;#
        .asg    "", RTDX_config$regs
RTDX_config     .macro _usertdx, _usertexecution, _rtdxtype, _bufseg, _bufsize

            .global RTDX_MODE

            .if ($symcmp(":_rtdxtype:", "JTAG") = 0)
RTDX_MODE .set  RTDX_JTAGMODE
            .elseif ($symcmp(":_rtdxtype:", "HSRTDX") = 0)
RTDX_MODE .set  RTDX_HSRTDXMODE
            .elseif ($symcmp(":_rtdxtype:", "Simulator") = 0)
RTDX_MODE .set  RTDX_SIMMODE
            .endif

        .if(RTDX_USERTDX = 1)
            .global _RTDX_Buffer, _RTDX_Buffer_Start, _RTDX_Buffer_End

            ; reserve uninitialized space for RTDX buffer
_RTDX_Buffer    .usect ".rtdx_data", _bufsize, STD_TARGWORDMAUS

            ; define _RTDX_Buffer_Start
_RTDX_Buffer_Start  .usect ".rtdx_data", 1 * STD_TARGWORDMAUS, STD_TARGWORDMAUS

        .sect ".cinit"
        .align STD_TARGALIGN
        .field  1 * STD_TARGWORDMAUS
        .field  _RTDX_Buffer_Start
        .field  _RTDX_Buffer
        
            ; define _RTDX_Buffer_End 
_RTDX_Buffer_End  .usect ".rtdx_data", 1 * STD_TARGWORDMAUS, STD_TARGWORDMAUS

        .sect ".cinit"
        .align STD_TARGALIGN
        .field  1 * STD_TARGWORDMAUS
        .field  _RTDX_Buffer_End
        .field  _RTDX_Buffer + _bufsize - (1 * STD_TARGWORDMAUS)

        .endif
        .endm


;
;# ======== RTDX_end ========
;  Invoked at the end of all other configuration
;  declarations.
;
;#
;# Preconditions:
;#      none
;#
;# Postconditions:
;#      none
;#
        .asg    "", RTDX_end$regs
RTDX_end        .macro
        .endm


;
;# ======== RTDX_init ========
;
;  Note: ideally we would put RTDX initialization calls here.  Currently
;  RTDX initialization is done via the .pinit section, and a new auto_init
;  routine.  If we add the direct calls here we don't need pinit; but using
;  the current rtdx.lib we get double initialization, which causes double
;  atexit() registration. 
;#
;# Preconditions:
;#      none
;#
;# Postconditions:
;#      none
;#
;# Dependencies:
;#
        .asg    "", RTDX_init$regs
RTDX_init .macro
        .endm


;# ======== RTDX_startup ========
;
;#
;# Preconditions:
;#      none
;#
;# Postconditions:
;#      none
;#
;# Dependencies:
;#      none
;#
        .asg    "", RTDX_startup$regs
RTDX_startup        .macro
        .endm

        .endif          ; if RTDX_ is not defined
