/* --COPYRIGHT--,BSD
 * Copyright (c) 2010, Texas Instruments Incorporated
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * --/COPYRIGHT--*/

/*
 *  ======== audioDriver.tci ========
 */

/* Add I2c driver to DEV table */
bios.UDEV.create("i2c0");
bios.UDEV.instance("i2c0").fxnTableType = "IOM_Fxns";
bios.UDEV.instance("i2c0").initFxn = prog.extern("audioUserI2cInit");
bios.UDEV.instance("i2c0").params = prog.extern("audioI2cParams");
bios.UDEV.instance("i2c0").fxnTable = prog.extern("I2c_IOMFXNS");
bios.UDEV.instance("i2c0").deviceId = 0;


/* Add Aic31 driver to DEV table */
bios.UDEV.create("aic310");
bios.UDEV.instance("aic310").fxnTableType = "IOM_Fxns";
bios.UDEV.instance("aic310").initFxn = prog.extern("audioUserAic31Init");
bios.UDEV.instance("aic310").params = prog.extern("audioAic31Params");
bios.UDEV.instance("aic310").fxnTable = prog.extern("Aic31_IOMFXNS");
bios.UDEV.instance("aic310").deviceId = 0;

/* Add Mcasp driver to DEV table */
bios.UDEV.create("mcasp0");
bios.UDEV.instance("mcasp0").fxnTableType = "IOM_Fxns";
bios.UDEV.instance("mcasp0").initFxn = prog.extern("audioUserMcaspInit");
bios.UDEV.instance("mcasp0").params = prog.extern("audioMcaspParams");
bios.UDEV.instance("mcasp0").fxnTable = prog.extern("Mcasp_IOMFXNS");
bios.UDEV.instance("mcasp0").deviceId = 0;

/* Add Audio driver to DEV table */
bios.UDEV.create("audio0");
bios.UDEV.instance("audio0").fxnTableType = "IOM_Fxns";
bios.UDEV.instance("audio0").initFxn = prog.extern("audioUserAudioInit");
bios.UDEV.instance("audio0").params = prog.extern("audioParams");
bios.UDEV.instance("audio0").fxnTable = prog.extern("Audio_IOMFXNS");

/*
 *  Add instance of DIO object to use the configured codec. This is the device
 *  SIO streams use.
 */
var dioCodec = bios.DIO.create("dioAudioOUT");
dioCodec.deviceName = prog.get("audio0");
dioCodec.useCallBackFxn = false;
dioCodec.chanParams = prog.extern("audioChanParamsOUT");
