/* 
 * Copyright (c) 2010, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
/*
 *  ======== package.bld ========
 */

var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

Pkg.attrs.exportAll = true;

var buildPlatforms = {
    C64P:               ["dm6446", "C6455"]
};

/*
 * Executables for all platforms
 * To add a new program, just create a new element in the progs array and
 * set it equal to an array listing the objects the program requires.
 *
 * The output will have the name "<element>_tiomapxxxx.<ext>" or
 * "<element>_<platform>.<ext>" , and for BIOS based apps there
 * must be a tconf script describing the programs configuration with the
 * name <element>.tcf.
 */
var commonProgs = [
    {
        name:   "bufres_test0",
        sources: ["bufres_test0"],
        tcf:    "bufres_test",
    },
    {
        name:   "bufres_test",
        sources: ["bufres_test"],
        tcf:    "bufres_test",
    },
];

/* Specifies which programs run on which platforms */
var platProgs = {
    "2430"    : commonProgs,
    "dm6446"  : commonProgs,
    "dm648"   : commonProgs,
    "C6455"   : commonProgs
};

var realPlatformName = {
    "2430"    : "ti.platforms.sdp2430",
    "dm6446"  : "ti.platforms.evmDM6446",
    "dm648"   : "ti.platforms.evmDM648",
    "C6455"   : "ti.platforms.dsk6455"
};

var testLibs = [
    {
        name: "bufres_util",
        sources: ["bufres_util"],
    },
    {
        name: "bufalg_ti",
        sources: ["bufalg_ti", "bufalg_ti_vtab"],
    },
];


Pkg.uses = ["ti/bios/include"];

for (var i = 0; i < Build.targets.length; i++) {
    var targ = Build.targets[i];
    var plat = targ.platform;   /* use the target's default platform */

    if (buildPlatforms[targ.name] == null) {
        continue;
    }
    print("building for target " + targ.name + " ...");

//    var profName = "debug";
    var profName = "release";

    var profCOpts = targ.profiles[profName].compileOpts.copts;
    var profDefs = targ.profiles[profName].compileOpts.defs;

    // Build libraries
    for (var j = 0; j < testLibs.length; j++) {
        print("Adding library " + testLibs[j].name);
        var lib = Pkg.addLibrary("lib/" + profName + "/" + testLibs[j].name,
                targ, {
                    profile: profName
                });
        lib.addObjects(testLibs[j].sources);
    }

    // for each build platform (eg, 2430,...)
    for (k = 0; k < buildPlatforms[targ.name].length; k++) {
        var chipType = buildPlatforms[targ.name][k]; // eg, "2430"
        var progs = platProgs[chipType];  // eg, programs2430

        /* Process platform's executables */
        for (j = 0; j < progs.length; j++) {
            var prog = progs[j];
            print("adding " + prog.name + " (" + chipType + ")...");
            var outDir = "bin/" + chipType + "/";

            // add executable
            if (prog.tcf != null) {
                /* print("program tcf: " + prog.tcf + "***"); */
                var exe = Pkg.addExecutable(outDir +
                    prog.name, targ, realPlatformName[chipType], {
                        profile: profName,
                        cfgScript: prog.tcf  + ".tcf",
                        cfgArgs: "{chipType: \"" + chipType + "\"}",
                    });
            }
            else {
                /*
                 *  This is not a BIOS program, so there is no tcf file.
                 *  Instead use .xdt file that will have the linker include
                 *  paths to search for dman3, acpy3, and rts libraries.
                 *  Also set compile flag to compile out BIOS functions.
                 */
                /* print("program xdt: " + prog.xdt + "***"); */
                var exe = Pkg.addExecutable(
                prog.name + "_" + chipType, targ, realPlatformName[chipType], {

                        profile: profName,
                        linkTemplate: prog.xdt + ".xdt",
                        cfgScript: null,
                 });
            }

            exe.addObjects(prog.sources);
        }
    }
}
/*
 *  @(#) ti.sdo.fc.rman.examples.bufres; 1, 0, 0,177; 12-1-2010 17:25:35; /db/atree/library/trees/fc/fc-p01x/src/ xlibrary

 */

