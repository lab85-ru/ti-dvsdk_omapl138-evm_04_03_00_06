/* 
 * Copyright (c) 2010, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */

/*
 * Load common XDC config settings
 */
utils.importFile("common.cfg");

/* RMAN used to allocate resources */
var RMAN = xdc.useModule('ti.sdo.fc.rman.RMAN');
RMAN.useDSKT2 = true;
RMAN.yieldSamePriority = true;
RMAN.tableSize = 10;

/* DMAN3 used to allocate resources */
var DMAN3 = xdc.useModule('ti.sdo.fc.dman3.DMAN3');

DMAN3.heapInternal = "_L1D_HEAP";
DMAN3.heapExternal = "EXTMEM_HEAP";

DMAN3.useExternalRM = true;
DMAN3.numQdmaChannels = 1;


/*
 * All IRES resources used by alg, must be configured
 */
var EDMA3CHAN = xdc.useModule('ti.sdo.fc.ires.edma3chan.EDMA3CHAN');
var BUFRES = xdc.useModule('ti.sdo.fc.ires.bufres.BUFRES');

/*
 * If EDMA3 is being used, then the meta-config EDMA3 module should be
 * configured as well
 */
var META = xdc.useModule('ti.sdo.fc.edma3.Settings');
META.semCreateFxn = "Sem_create";
META.semDeleteFxn = "Sem_delete";
META.semPendFxn = "Sem_pend";
META.semPostFxn = "Sem_post";

/*
 * Example codec implementation that requests IRES EDMA3 resources
 */
xdc.loadPackage('ti.sdo.fc.ires.examples.codecs.edmacodec1');

/*
 * Example codec implementation that requests IDMA3 resources
 */
xdc.loadPackage('ti.sdo.fc.ires.examples.codecs.idma3codec1');

/*This package provides mock implementations of Semaphores etc */
var EX = xdc.useModule('ti.sdo.fc.rman.examples.EXAMPLE');

switch (chipType) {
    case "dm6446":
    case "3430":
    case "3530":
        META.maxPaRams = [1,6,0,0];
        META.maxTccs = [1,2,0,0];
        META.maxEdmaChannels = [2,2,0,0];
        META.maxQdmaChannels = [0,1,0,0];
        break;

    case "dm6467":
        META.maxPaRams = [64,64,0,0];
        META.maxTccs = [10,10,0,0];
        META.maxEdmaChannels = [5,5,0,0];
        META.maxQdmaChannels = [1,1,1,1];
        //META.contiguousPaRams = true;
        break;

    case "C6455":
        META.maxPaRams = [64,64,0,0];
        META.maxTccs = [10,10,0,0];
        META.maxEdmaChannels = [5,5,0,0];
        META.maxQdmaChannels = [1,1,1,1];
        //META.contiguousPaRams = true;
        break;

    default:
        throw("Unsupported chipType: " + chipType);
}

/* Switch to debug profile for all FC modules */
xdc.useModule('ti.sdo.fc.global.Settings').profile = "debug";

/* Switch on trace for some modules specifically */
xdc.loadPackage('ti.sdo.fc.rman').profile = "debug_trace";
xdc.loadPackage('ti.sdo.fc.ires.edma3chan').profile = "debug_trace";
xdc.loadPackage('ti.sdo.fc.edma3').profile = "debug_trace";
xdc.loadPackage('ti.sdo.fc.dman3').profile = "debug_trace";
xdc.loadPackage('ti.sdo.edma3.rm').profile = "debug";
/*
 *  @(#) ti.sdo.fc.examples.dma; 1, 0, 0,19; 12-1-2010 17:24:42; /db/atree/library/trees/fc/fc-p01x/src/ xlibrary

 */

