/* 
 * Copyright (c) 2010, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
/*
 *  ======== package.bld ========
 *  Build script for dskt package.
 */

var Pkg = xdc.useModule('xdc.bld.PackageContents');

Pkg.attrs.exportSrc = true;

var COPTS55 = " -D_DBG_WITH_SYS_ ";
var COPTS64P = "";

var LIBBASE = "dskt2";

var OBJS = ["dskt2_scratch", "dskt2_qos", "dskt2actv", "dskt2crea",
    "dskt2ctrl", "dskt2dact", "dskt2free", "dskt2_permute", "dskt2_lock",
    "gt_dais"];

/* This package uses DBC, which uses BIOS . */
Pkg.uses = ["ti/bios/include"];

Pkg.otherFiles = [
    "dskt2_mem.h",
    "dskt2_qos.h",
    "dskt2_lock.h",
    "dskt2.h",
    "DSKT2.link.xdt",
    "dskt2.tci",
    "dskt2_c.tpl",
    "dskt2_cmd.tpl",
    "_dskt2.h",
    "_dskt.h",
    "dskt2_permute.h",
    "package.bld"
];

/* loop over all targets */
for (var i = 0; i < Build.targets.length; i++) {
    var targ = Build.targets[i];
    var plat = targ.platform;   /* use the target's default platform */

    /* Don't build for non-DSP platforms */
    if ((targ.name != "C64P") && (targ.name != "C674")) {
        //print("Not building for target " + targ.name + " ...");
        continue;
    }

    print("building for target " + targ.name + " ...");

    var myCopts = COPTS64P;

    var lib = Pkg.addLibrary("lib/debug/" + LIBBASE , targ, {
        profile: "debug",
        copts: myCopts + " ",
    });
    lib.addObjects(OBJS);

    var lib = Pkg.addLibrary("lib/release/" + LIBBASE , targ, {
        profile: "release",
        copts: myCopts + " ",
    });
    lib.addObjects(OBJS);

    var lib = Pkg.addLibrary("lib/trace/" + LIBBASE , targ, {
        profile: "trace",
        copts: myCopts + " ",
    });
    lib.addObjects(OBJS);

    var lib = Pkg.addLibrary("lib/debug_trace/" + LIBBASE , targ, {
        profile: "debug_trace",
        copts: myCopts + " ",
    });
    lib.addObjects(OBJS);
}
/*
 *  @(#) ti.sdo.fc.dskt2; 1, 0, 4,300; 12-1-2010 17:24:36; /db/atree/library/trees/fc/fc-p01x/src/ xlibrary

 */

