/* 
 * Copyright (c) 2010, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
/*
 *  ======== package.bld ========
 */

var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

Pkg.attrs.exportSrc = true;

Pkg.otherFiles = [
    "iresman_sdma.h",
    "ires_sdma.h",
    "iresman_protocol_sdma.h",
    "_sdma.h",
    "package.bld"
];

/* lib/ is a generated directory that 'xdc clean' should remove */
Pkg.generatedFiles = [ "lib/" ];

// check if profile specified in XDCARGS.  'arguments' is XDCARGS
// e.g., XDCARGS="... profile=debug ..."
var cmdlProf = (" " + arguments.join(" ") + " ").match(/ profile=([^ ]+) /);
cmdlProf = cmdlProf != null ? cmdlProf[1] : null;

// ==== loop over all targets in build array ====
for (var i = 0; i < Build.targets.length; i++) {
    var targ = Build.targets[i];

    // skip target if not compatible with v5T
    // (this library manages SDMA, which is only accessible
    // on the ARM (v5T) side of an OMAP device
    var targIsaChain = "/" + targ.getISAChain().join("/") + "/";
    if (!targIsaChain.match("/v5T/")) {
        continue;
    }

    // ==== loop over all profiles ====
    for (var profile in targ.profiles) {

        // skip profile if different than specified on command line
        if ((cmdlProf != null) && (profile != cmdlProf)) {
            continue;
        }

        // name = lib/profile/name.a+suffix
        var name = "lib/" + profile + "/sdma";

        // build the library
        var library = Pkg.addLibrary(name, targ, {profile : profile});

        /* add the source files */
        library.addObjects(["iresman_sdma", "ires_sdma"]);
    }
}
/*
 *  @(#) ti.sdo.fc.ires.sdma; 1, 0, 0,132; 12-1-2010 17:25:23; /db/atree/library/trees/fc/fc-p01x/src/ xlibrary

 */

